{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from 'vue-router';\nimport { inject } from 'vue';\n\n//Get props using $pramas in option API\n\nexport default {\n  __name: 'PageEdit',\n  props: ['index'],\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    //composite API\n    const router = useRouter();\n    const pages = inject('$pages');\n    const bus = inject('$bus');\n    //method to get props using built in property\n    const {\n      index\n    } = __props;\n    let page = pages.getSinglePage(index);\n    let title2 = ref(page.pageTitle);\n    let content2 = ref(page.pageContent);\n    let text2 = ref(page.link.text);\n    let published2 = ref(page.published);\n    function submit() {\n      updatedPage = {\n        pageTitle: title2.value,\n        pageContent: content2.value,\n        link: {\n          text: text2.value\n        },\n        published: Published\n      };\n      console.log(updatedPage);\n      // pages.editPage(index,page);\n\n      // bus.$emit('page-updated',{\n      //     index,\n      //     page\n      // })\n\n      // goToPagesList();\n    }\n    function deletePage() {\n      pages.removePage(index);\n      bus.$emit('page-deleted', {\n        index\n      });\n      goToPagesList();\n    }\n    function goToPagesList() {\n      router.push({\n        path: '/pages'\n      });\n    }\n    const __returned__ = {\n      router,\n      pages,\n      bus,\n      get page() {\n        return page;\n      },\n      set page(v) {\n        page = v;\n      },\n      get title2() {\n        return title2;\n      },\n      set title2(v) {\n        title2 = v;\n      },\n      get content2() {\n        return content2;\n      },\n      set content2(v) {\n        content2 = v;\n      },\n      get text2() {\n        return text2;\n      },\n      set text2(v) {\n        text2 = v;\n      },\n      get published2() {\n        return published2;\n      },\n      set published2(v) {\n        published2 = v;\n      },\n      submit,\n      deletePage,\n      goToPagesList,\n      get useRouter() {\n        return useRouter;\n      },\n      inject\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRouter","inject","router","pages","bus","index","__props","page","getSinglePage","title2","ref","pageTitle","content2","pageContent","text2","link","text","published2","published","submit","updatedPage","value","Published","console","log","deletePage","removePage","$emit","goToPagesList","push","path"],"sources":["C:/xampp/htdocs/vuePractice/vue_cli_practice2/src/views/PageEdit.vue"],"sourcesContent":["<template>\r\n    <h4>Edit {{ page.pageTitle }}</h4>\r\n\r\n    <form action=\"\" class=\"container mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-mb-8\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">Page Title</label>\r\n                    <input id=\"name\" type=\"text\" class=\"form-control\" v-model=\"title2\" />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">Page Content</label>\r\n                    <textarea  id=\"content\" type=\"text\" class=\"form-control\" rows=\"5\" v-model=\"content2\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-mb-8\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">Link Text</label>\r\n                    <input id=\"linktext\" type=\"text\" class=\"form-control\" v-model=\"text2\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <div class=\"form-check\">\r\n                        <input id='checkbox' type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        v-model=\"published2\">\r\n                        <label for=\"gridCheck1\" class=\"form-check-label\">Published</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <button class=\"btn btn-primary me-2\"\r\n            @click.prevent=\"submit\">\r\n                Edit\r\n            </button>\r\n            <button class=\"btn btn-secondary me-2\"\r\n            @click.prevent=\"goToPagesList\">\r\n                Cancel\r\n            </button>\r\n            <button class=\"btn btn-danger\"\r\n            @click.prevent=\"deletePage\">\r\n                Delete\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n\r\n</template>\r\n\r\n<script setup>\r\n//composite API\r\nimport {useRouter} from 'vue-router';\r\nimport { inject } from 'vue';\r\n\r\n//Get props using $pramas in option API\r\nconst router= useRouter();\r\nconst pages = inject('$pages');\r\nconst bus = inject('$bus');\r\n//method to get props using built in property\r\nconst {index} = defineProps(['index']);\r\n\r\nlet page = pages.getSinglePage(index)\r\n\r\nlet title2 = ref(page.pageTitle);\r\nlet content2 = ref(page.pageContent);\r\nlet text2 = ref(page.link.text);\r\nlet published2 = ref(page.published);\r\n\r\nfunction submit(){ \r\n\r\n\r\n    updatedPage = {\r\n        pageTitle:  title2.value,\r\n            pageContent: content2.value,\r\n            link: {\r\n                text: text2.value\r\n                },\r\n            published: Published\r\n    }\r\n    console.log( updatedPage);\r\n    // pages.editPage(index,page);\r\n\r\n    // bus.$emit('page-updated',{\r\n    //     index,\r\n    //     page\r\n    // })\r\n\r\n    // goToPagesList();\r\n}\r\n\r\nfunction deletePage() {\r\n    pages.removePage(index);\r\n\r\n    bus.$emit('page-deleted',{index});\r\n    goToPagesList();\r\n}\r\n\r\nfunction goToPagesList(){\r\n    router.push({path:'/pages'})\r\n}\r\n\r\n</script>"],"mappings":";AAoDA,SAAQA,SAAS,QAAO,YAAY;AACpC,SAASC,MAAM,QAAQ,KAAK;;AAE5B;;;;;;;;;;IAJA;IAKA,MAAMC,MAAM,GAAEF,SAAS,CAAC,CAAC;IACzB,MAAMG,KAAK,GAAGF,MAAM,CAAC,QAAQ,CAAC;IAC9B,MAAMG,GAAG,GAAGH,MAAM,CAAC,MAAM,CAAC;IAC1B;IACA,MAAM;MAACI;IAAK,CAAC,GAAGC,OAAsB;IAEtC,IAAIC,IAAI,GAAGJ,KAAK,CAACK,aAAa,CAACH,KAAK,CAAC;IAErC,IAAII,MAAM,GAAGC,GAAG,CAACH,IAAI,CAACI,SAAS,CAAC;IAChC,IAAIC,QAAQ,GAAGF,GAAG,CAACH,IAAI,CAACM,WAAW,CAAC;IACpC,IAAIC,KAAK,GAAGJ,GAAG,CAACH,IAAI,CAACQ,IAAI,CAACC,IAAI,CAAC;IAC/B,IAAIC,UAAU,GAAGP,GAAG,CAACH,IAAI,CAACW,SAAS,CAAC;IAEpC,SAASC,MAAMA,CAAA,EAAE;MAGbC,WAAW,GAAG;QACVT,SAAS,EAAGF,MAAM,CAACY,KAAK;QACpBR,WAAW,EAAED,QAAQ,CAACS,KAAK;QAC3BN,IAAI,EAAE;UACFC,IAAI,EAAEF,KAAK,CAACO;QACZ,CAAC;QACLH,SAAS,EAAEI;MACnB,CAAC;MACDC,OAAO,CAACC,GAAG,CAAEJ,WAAW,CAAC;MACzB;;MAEA;MACA;MACA;MACA;;MAEA;IACJ;IAEA,SAASK,UAAUA,CAAA,EAAG;MAClBtB,KAAK,CAACuB,UAAU,CAACrB,KAAK,CAAC;MAEvBD,GAAG,CAACuB,KAAK,CAAC,cAAc,EAAC;QAACtB;MAAK,CAAC,CAAC;MACjCuB,aAAa,CAAC,CAAC;IACnB;IAEA,SAASA,aAAaA,CAAA,EAAE;MACpB1B,MAAM,CAAC2B,IAAI,CAAC;QAACC,IAAI,EAAC;MAAQ,CAAC,CAAC;IAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}