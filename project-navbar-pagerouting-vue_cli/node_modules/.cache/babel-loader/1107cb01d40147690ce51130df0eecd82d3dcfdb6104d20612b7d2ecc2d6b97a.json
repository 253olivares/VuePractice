{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-703ca2bb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" v-if loops through our page array and display each as a nav option \"), $data.page ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.page.pageTitle), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.page.pageContent), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","_createCommentVNode","$data","page","_hoisted_1","_createElementVNode","_toDisplayString","pageTitle","pageContent"],"sources":["C:\\xampp\\htdocs\\vuePractice\\project-navbar-pagerouting-vue_cli\\src\\views\\PageViewer.vue"],"sourcesContent":["<template>\r\n    <!-- v-if loops through our page array and display each as a nav option -->\r\n    <div v-if=\"page\"  class=\"container\">\r\n        <h1>{{ page.pageTitle }}</h1>\r\n        <p>{{page.pageContent}}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    // index prop that we take in from the url\r\n    props:['index'],\r\n    inject:['$pages'],\r\n    // create is ran during the app life cycle to set this \r\n    created(){\r\n        if (!this.index){\r\n            this.page = this.$pages.getSinglePage(0)\r\n        }else {\r\n            this.page = this.$pages.getSinglePage(0)\r\n        }\r\n        // this.$watch(()=>this.$route.params,(newParams, prevParams)=>{\r\n        //     this.page = this.$pages.getSinglePage(newParams.index)\r\n        // })\r\n    },\r\n    data(){\r\n        return {\r\n            // basic page created from data\r\n            page: {\r\n                link : {text: \"Home\", url: \"index.html\"},\r\n                pageContent : \"This is the home content\",\r\n                pageTitle : \"Home Page\",\r\n                published : true\r\n            },\r\n        }\r\n    },\r\n    // watch function that keeps track of the index and runs the function inside when vue as noticed that the index value has changed\r\n    watch: {\r\n        index(newIndex, oldIndex){\r\n            this.page = this.$pages.getSinglePage(newIndex)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nh1{\r\n    margin-top: 30px !important;\r\n    margin-bottom: 30px !important;\r\n}\r\n\r\n\r\n\r\n</style>"],"mappings":";;;EAAAA,GAAA;EAEsBC,KAAK,EAAC;;;uBAF5BC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,wEAA2E,EAChEC,KAAA,CAAAC,IAAI,I,cAAfJ,mBAAA,CAGM,OAHNK,UAGM,GAFFC,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBJ,KAAA,CAAAC,IAAI,CAACI,SAAS,kBACrBF,mBAAA,CAA2B,WAAAC,gBAAA,CAAtBJ,KAAA,CAAAC,IAAI,CAACK,WAAW,iB,KAJ7BP,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}