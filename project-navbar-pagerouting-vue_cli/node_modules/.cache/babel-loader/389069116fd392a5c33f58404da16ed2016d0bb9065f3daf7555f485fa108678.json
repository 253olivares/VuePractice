{"ast":null,"code":"import NavbarLink from './NavbarLink.vue';\nexport default {\n  // injecting our global variables\n  inject: ['$pages', '$bus'],\n  components: {\n    NavbarLink\n  },\n  computed: {\n    // published pages filters out our pages and creates a new array of just pages\n    // that have published set to true.\n\n    // this creates a bug where because now we have 2 arrays and linkes become out of sync if inner objects are hidden\n    // this could be fixed if we just pass pages and change navbarlink to us v-show when published is true.\n    publishedPages() {\n      // return this.pages.filter(p => p.published)\n      return this.pages;\n    }\n  },\n  // create life cycle creates our event listeners that we will be looking for \n  // these listeners update th nave bar whenever \n  created() {\n    // get stored theme from local storage db\n    this.getStoreThemeSetting();\n    // get our pages from pages global\n    this.pages = this.$pages.getAllPages();\n    // creates custom event listener that listens for this emit from child components\n    this.$bus.$on('page-updated', () => {\n      console.log(this.$pages.getAllPages());\n      this.pages = [...this.$pages.getAllPages()];\n    });\n    // creates custom event listener that listens for this emit from child components\n    this.$bus.$on('page-created', () => {\n      console.log(this.$pages.getAllPages());\n      this.pages = [...this.$pages.getAllPages()];\n    });\n    // creates custom event listener that listens for this emit from child components\n    this.$bus.$on('page-deleted', () => {\n      console.log(this.$pages.getAllPages());\n      this.pages = [...this.$pages.getAllPages()];\n    });\n  },\n  data() {\n    return {\n      theme: 'light',\n      pages: []\n    };\n  },\n  // methods that allow us to change themes and store those changes in our local storage db\n  methods: {\n    changeTheme() {\n      let theme = \"light\";\n      if (this.theme == 'light') {\n        theme = 'dark';\n      }\n      this.theme = theme;\n      this.storeThemeSetting();\n    },\n    storeThemeSetting() {\n      localStorage.setItem('theme', this.theme);\n    },\n    // get our stored theme\n    getStoreThemeSetting() {\n      let theme = localStorage.getItem('theme');\n      if (theme) {\n        this.theme = theme;\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavbarLink","inject","components","computed","publishedPages","pages","created","getStoreThemeSetting","$pages","getAllPages","$bus","$on","console","log","data","theme","methods","changeTheme","storeThemeSetting","localStorage","setItem","getItem"],"sources":["C:\\xampp\\htdocs\\vuePractice\\project-navbar-pagerouting-vue_cli\\src\\components\\Nav.vue"],"sourcesContent":["<template>\r\n    <!-- our nav  -->\r\n<nav :class=\"[`navbar-${theme}`,`bg-${theme}`,'navbar','navbar-expand-lg']\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">My Vue</a>\r\n            <!-- we loop through our pages passed to us through a computed function that will keep published pages updates\r\n            with what pages changes to\r\n            V-show hides all our navs that publish is set to false  -->\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <NavbarLink  v-for=\"(page,index) in publishedPages\" class=\"nav-item\" :key=\"index\"\r\n                        :page=\"page\"\r\n                        :index=\"index\"\r\n                        v-show=\"page.published\"\r\n                    ></NavbarLink>\r\n                    <li>\r\n                    <router-link\r\n                    to=\"/pages\"\r\n                    class=\"nav-link\" \r\n                    aria-current=\"page\"\r\n                    active-class=\"active emphasize\" \r\n                    >Pages</router-link>\r\n                    </li>\r\n            </ul>\r\n            <form class=\"d-flex\">\r\n                <!-- our button in nav that will change theme when clicked -->\r\n                <button\r\n                class=\"btn btn-primary\"\r\n                @click.prevent = \"changeTheme()\">\r\n                Toggle Nav Bar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script>\r\n\r\nimport NavbarLink from './NavbarLink.vue';\r\n    export default {\r\n        // injecting our global variables\r\n        inject:['$pages','$bus'],\r\n        components: {\r\n        NavbarLink\r\n        },\r\n        computed: {\r\n            // published pages filters out our pages and creates a new array of just pages\r\n            // that have published set to true.\r\n\r\n            // this creates a bug where because now we have 2 arrays and linkes become out of sync if inner objects are hidden\r\n            // this could be fixed if we just pass pages and change navbarlink to us v-show when published is true.\r\n            publishedPages() {\r\n                // return this.pages.filter(p => p.published)\r\n                return this.pages\r\n            }\r\n        },\r\n        // create life cycle creates our event listeners that we will be looking for \r\n        // these listeners update th nave bar whenever \r\n        created() {\r\n            // get stored theme from local storage db\r\n            this.getStoreThemeSetting();\r\n            // get our pages from pages global\r\n            this.pages = this.$pages.getAllPages();\r\n            // creates custom event listener that listens for this emit from child components\r\n            this.$bus.$on('page-updated',()=>{\r\n                console.log(this.$pages.getAllPages());\r\n                this.pages=[...this.$pages.getAllPages()]\r\n            });\r\n            // creates custom event listener that listens for this emit from child components\r\n            this.$bus.$on('page-created',()=>{\r\n                console.log(this.$pages.getAllPages());\r\n                this.pages=[...this.$pages.getAllPages()]\r\n            });\r\n            // creates custom event listener that listens for this emit from child components\r\n            this.$bus.$on('page-deleted',()=>{\r\n                console.log(this.$pages.getAllPages());\r\n                this.pages=[...this.$pages.getAllPages()]\r\n            });\r\n        },  \r\n        data(){\r\n            return{\r\n                theme: 'light',\r\n                pages: []\r\n            }\r\n        },\r\n        // methods that allow us to change themes and store those changes in our local storage db\r\n        methods: {\r\n            changeTheme(){\r\n                let theme = \"light\";\r\n                if(this.theme == 'light'){  \r\n                    theme = 'dark';\r\n                }\r\n                this.theme = theme;\r\n                this.storeThemeSetting();\r\n            },\r\n            storeThemeSetting(){\r\n                localStorage.setItem('theme',this.theme)\r\n            },\r\n            // get our stored theme\r\n            getStoreThemeSetting(){\r\n                let theme = localStorage.getItem('theme')\r\n                if(theme) {\r\n                    this.theme = theme;\r\n                }\r\n            }\r\n        },\r\n    }\r\n</script>"],"mappings":"AAqCA,OAAOA,UAAS,MAAO,kBAAkB;AACrC,eAAe;EACX;EACAC,MAAM,EAAC,CAAC,QAAQ,EAAC,MAAM,CAAC;EACxBC,UAAU,EAAE;IACZF;EACA,CAAC;EACDG,QAAQ,EAAE;IACN;IACA;;IAEA;IACA;IACAC,cAAcA,CAAA,EAAG;MACb;MACA,OAAO,IAAI,CAACC,KAAI;IACpB;EACJ,CAAC;EACD;EACA;EACAC,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACC,oBAAoB,CAAC,CAAC;IAC3B;IACA,IAAI,CAACF,KAAI,GAAI,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC;IACtC;IACA,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,cAAc,EAAC,MAAI;MAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;MACtC,IAAI,CAACJ,KAAK,GAAC,CAAC,GAAG,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC;IAC5C,CAAC,CAAC;IACF;IACA,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,cAAc,EAAC,MAAI;MAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;MACtC,IAAI,CAACJ,KAAK,GAAC,CAAC,GAAG,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC;IAC5C,CAAC,CAAC;IACF;IACA,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,cAAc,EAAC,MAAI;MAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;MACtC,IAAI,CAACJ,KAAK,GAAC,CAAC,GAAG,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EACDK,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAE,OAAO;MACdV,KAAK,EAAE;IACX;EACJ,CAAC;EACD;EACAW,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAE;MACT,IAAIF,KAAI,GAAI,OAAO;MACnB,IAAG,IAAI,CAACA,KAAI,IAAK,OAAO,EAAC;QACrBA,KAAI,GAAI,MAAM;MAClB;MACA,IAAI,CAACA,KAAI,GAAIA,KAAK;MAClB,IAAI,CAACG,iBAAiB,CAAC,CAAC;IAC5B,CAAC;IACDA,iBAAiBA,CAAA,EAAE;MACfC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC,IAAI,CAACL,KAAK;IAC3C,CAAC;IACD;IACAR,oBAAoBA,CAAA,EAAE;MAClB,IAAIQ,KAAI,GAAII,YAAY,CAACE,OAAO,CAAC,OAAO;MACxC,IAAGN,KAAK,EAAE;QACN,IAAI,CAACA,KAAI,GAAIA,KAAK;MACtB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}