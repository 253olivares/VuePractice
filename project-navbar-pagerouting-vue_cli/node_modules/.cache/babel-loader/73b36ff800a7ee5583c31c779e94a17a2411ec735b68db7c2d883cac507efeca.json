{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from 'vue-router';\nimport { ref, inject, computed, watch } from 'vue';\n// inject our global listeners\n\nexport default {\n  __name: 'CreatePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const bus = inject('$bus');\n    const pages = inject('$pages');\n    // use router to redirect us after we save the new page\n    const router = useRouter();\n\n    // creates ref that we will be adjusting to set new values\n    let pageTitle = ref('');\n    let pageContent = ref('');\n    let linkText = ref('');\n    let published = ref(true);\n\n    // when user is satisfied with their entry we check to make sure all forms are filled\n    // then create a new object with those values\n    // and push then to our controller that talks to our localstorage db\n    function submitForm() {\n      if (!pageTitle || !pageContent || !linkText) {\n        alert('Please fill the form.');\n        return;\n      }\n      let newPage = {\n        pageTitle: pageTitle.value,\n        pageContent: pageContent.value,\n        link: {\n          text: linkText.value\n        },\n        published: published.value\n      };\n      // appends new object to exist page and updates localstorage db\n      pages.addPage(newPage);\n      // global listener\n      bus.$emit('page-created', newPage);\n      // reset our inputs\n      pageTitle = '';\n      pageContent = '';\n      linkText = '';\n      published = true;\n      // redirect after the function is finished\n      router.push({\n        path: '/pages'\n      });\n    }\n    // form invalid make sure that we have all our values\n    const isFormInvalid = computed(() => !pageTitle || !pageContent || !linkText);\n    // watch listens to check if page title is changes\n    // if it detects that page title has changed and the link text is the same it binds both values to they change\n    // at the same time with the same letters.\n    // if one changes link text before pagetitle then code doesnt run and both values do not change in sync\n    watch(pageTitle, (newTitle, oldTitle) => {\n      if (linkText.value === oldTitle) {\n        linkText.value = newTitle;\n      }\n    });\n    const __returned__ = {\n      bus,\n      pages,\n      router,\n      get pageTitle() {\n        return pageTitle;\n      },\n      set pageTitle(v) {\n        pageTitle = v;\n      },\n      get pageContent() {\n        return pageContent;\n      },\n      set pageContent(v) {\n        pageContent = v;\n      },\n      get linkText() {\n        return linkText;\n      },\n      set linkText(v) {\n        linkText = v;\n      },\n      get published() {\n        return published;\n      },\n      set published(v) {\n        published = v;\n      },\n      submitForm,\n      isFormInvalid,\n      get useRouter() {\n        return useRouter;\n      },\n      ref,\n      inject,\n      computed,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRouter","ref","inject","computed","watch","bus","pages","router","pageTitle","pageContent","linkText","published","submitForm","alert","newPage","value","link","text","addPage","$emit","push","path","isFormInvalid","newTitle","oldTitle"],"sources":["C:/xampp/htdocs/vuePractice/project-navbar-pagerouting-vue_cli/src/views/CreatePage.vue"],"sourcesContent":["<template>\r\n    <form action=\"\" class=\"container mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">\r\n                        Page Title\r\n                    </label>\r\n                    <input\r\n                    v-model=\"pageTitle\"\r\n                    type=\"text\" \r\n                    class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">\r\n                        Content\r\n                    </label>\r\n                    <textarea type=\"text\" class=\"form-control\" rows=\"5\" v-model=\"pageContent\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class=\"col\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">\r\n                        Link Text\r\n                    </label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"linkText\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <div class=\"form-check\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" v-model=\"published\">\r\n                        <label for=\"gridCheck1\" class=\"form-check-label\">\r\n                            Published\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                :disbled=\"isFormInvalid\"\r\n                @click.prevent=\"submitForm\"\r\n                >Create Page</button>\r\n        </div>\r\n        </form>\r\n</template>\r\n\r\n<script setup>\r\nimport {useRouter} from 'vue-router';\r\nimport {ref,inject, computed,watch} from 'vue';\r\n// inject our global listeners\r\nconst bus = inject('$bus');\r\nconst pages = inject('$pages');\r\n// use router to redirect us after we save the new page\r\nconst router = useRouter();\r\n\r\n// creates ref that we will be adjusting to set new values\r\nlet pageTitle = ref('');\r\nlet pageContent = ref('');\r\nlet linkText = ref('');\r\nlet published = ref(true);\r\n\r\n// when user is satisfied with their entry we check to make sure all forms are filled\r\n// then create a new object with those values\r\n// and push then to our controller that talks to our localstorage db\r\nfunction submitForm(){\r\n        if (!pageTitle || !pageContent ||!linkText ){\r\n            alert('Please fill the form.')\r\n            return;\r\n        }\r\n\r\n        let newPage={\r\n            pageTitle: pageTitle.value,\r\n            pageContent: pageContent.value,\r\n            link: {\r\n                text: linkText.value,\r\n                },\r\n            published: published.value\r\n        }\r\n        // appends new object to exist page and updates localstorage db\r\n        pages.addPage(newPage)\r\n// global listener\r\n        bus.$emit('page-created',newPage);\r\n        // reset our inputs\r\n        pageTitle='';\r\n        pageContent='';\r\n        linkText='';\r\n        published = true;\r\n        // redirect after the function is finished\r\n        router.push({path: '/pages'});\r\n    }\r\n    // form invalid make sure that we have all our values\r\n    const isFormInvalid = computed(()=> !pageTitle || !pageContent||!linkText);\r\n    // watch listens to check if page title is changes\r\n    // if it detects that page title has changed and the link text is the same it binds both values to they change\r\n    // at the same time with the same letters.\r\n    // if one changes link text before pagetitle then code doesnt run and both values do not change in sync\r\n    watch(pageTitle,(newTitle, oldTitle)=>{\r\n        if(linkText.value === oldTitle){\r\n            linkText.value = newTitle;\r\n        }\r\n    });\r\n\r\n</script>"],"mappings":";AAiDA,SAAQA,SAAS,QAAO,YAAY;AACpC,SAAQC,GAAG,EAACC,MAAM,EAAEC,QAAQ,EAACC,KAAK,QAAO,KAAK;AAC9C;;;;;;;;IACA,MAAMC,GAAG,GAAGH,MAAM,CAAC,MAAM,CAAC;IAC1B,MAAMI,KAAK,GAAGJ,MAAM,CAAC,QAAQ,CAAC;IAC9B;IACA,MAAMK,MAAM,GAAGP,SAAS,CAAC,CAAC;;IAE1B;IACA,IAAIQ,SAAS,GAAGP,GAAG,CAAC,EAAE,CAAC;IACvB,IAAIQ,WAAW,GAAGR,GAAG,CAAC,EAAE,CAAC;IACzB,IAAIS,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIU,SAAS,GAAGV,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA;IACA;IACA,SAASW,UAAUA,CAAA,EAAE;MACb,IAAI,CAACJ,SAAS,IAAI,CAACC,WAAW,IAAG,CAACC,QAAQ,EAAE;QACxCG,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACJ;MAEA,IAAIC,OAAO,GAAC;QACRN,SAAS,EAAEA,SAAS,CAACO,KAAK;QAC1BN,WAAW,EAAEA,WAAW,CAACM,KAAK;QAC9BC,IAAI,EAAE;UACFC,IAAI,EAAEP,QAAQ,CAACK;QACf,CAAC;QACLJ,SAAS,EAAEA,SAAS,CAACI;MACzB,CAAC;MACD;MACAT,KAAK,CAACY,OAAO,CAACJ,OAAO,CAAC;MAC9B;MACQT,GAAG,CAACc,KAAK,CAAC,cAAc,EAACL,OAAO,CAAC;MACjC;MACAN,SAAS,GAAC,EAAE;MACZC,WAAW,GAAC,EAAE;MACdC,QAAQ,GAAC,EAAE;MACXC,SAAS,GAAG,IAAI;MAChB;MACAJ,MAAM,CAACa,IAAI,CAAC;QAACC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACjC;IACA;IACA,MAAMC,aAAa,GAAGnB,QAAQ,CAAC,MAAK,CAACK,SAAS,IAAI,CAACC,WAAW,IAAE,CAACC,QAAQ,CAAC;IAC1E;IACA;IACA;IACA;IACAN,KAAK,CAACI,SAAS,EAAC,CAACe,QAAQ,EAAEC,QAAQ,KAAG;MAClC,IAAGd,QAAQ,CAACK,KAAK,KAAKS,QAAQ,EAAC;QAC3Bd,QAAQ,CAACK,KAAK,GAAGQ,QAAQ;MAC7B;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}