{"ast":null,"code":"import { useRoute } from 'vue-router';\nimport { inject } from 'vue';\n\n//Get props using $pramas in option API\n\nexport default {\n  __name: 'PageEdit',\n  props: ['index'],\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    //composite API\n    const route = useRoute();\n    const pages = inject('$pages');\n    const bus = inject('$bus');\n    //method to get props using built in property\n    const {\n      index\n    } = __props;\n    let page = pages.getSinglePage(index);\n    function submit() {\n      pages.editPage(index, page);\n      bus.$emit('page-updated', {\n        index,\n        page\n      });\n    }\n    const __returned__ = {\n      route,\n      pages,\n      bus,\n      get page() {\n        return page;\n      },\n      set page(v) {\n        page = v;\n      },\n      submit,\n      get useRoute() {\n        return useRoute;\n      },\n      inject\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useRoute","inject","route","pages","bus","index","__props","page","getSinglePage","submit","editPage","$emit"],"sources":["C:/xampp/htdocs/vuePractice/vue_cli_practice2/src/views/PageEdit.vue"],"sourcesContent":["<template>\r\n    <h4>Edit {{ page.pageTitle }}</h4>\r\n\r\n    <form action=\"\" class=\"container mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-mb-8\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">Page Title</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"page.pageTitle\" />\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">Page Content</label>\r\n                    <textarea type=\"text\" class=\"form-control\" rows=\"5\" v-model=\"page.pageContent\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-mb-8\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">Link Text</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"page.link.text\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <div class=\"form-check\">\r\n                        <input type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        v-model=\"page.published\">\r\n                        <label for=\"gridCheck1\" class=\"form-check-label\">Published</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <button class=\"btn btn-primary me-2\"\r\n            @click.prevent=\"submit\">\r\n                Edit\r\n            </button>\r\n            <button class=\"btn btn-secondary\">\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n\r\n</template>\r\n\r\n<script setup>\r\n//composite API\r\nimport {useRoute} from 'vue-router';\r\nimport { inject } from 'vue';\r\n\r\n//Get props using $pramas in option API\r\nconst route= useRoute();\r\nconst pages = inject('$pages');\r\nconst bus = inject('$bus');\r\n//method to get props using built in property\r\nconst {index} = defineProps(['index']);\r\n\r\nlet page = pages.getSinglePage(index)\r\n\r\nfunction submit(){\r\n    pages.editPage(index,page);\r\n\r\n    bus.$emit('page-updated',{\r\n        index,\r\n        page\r\n    })\r\n}\r\n\r\n</script>"],"mappings":"AA+CA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAASC,MAAM,QAAQ,KAAK;;AAE5B;;;;;;;;;;IAJA;IAKA,MAAMC,KAAK,GAAEF,QAAQ,CAAC,CAAC;IACvB,MAAMG,KAAK,GAAGF,MAAM,CAAC,QAAQ,CAAC;IAC9B,MAAMG,GAAG,GAAGH,MAAM,CAAC,MAAM,CAAC;IAC1B;IACA,MAAM;MAACI;IAAK,CAAC,GAAGC,OAAsB;IAEtC,IAAIC,IAAI,GAAGJ,KAAK,CAACK,aAAa,CAACH,KAAK,CAAC;IAErC,SAASI,MAAMA,CAAA,EAAE;MACbN,KAAK,CAACO,QAAQ,CAACL,KAAK,EAACE,IAAI,CAAC;MAE1BH,GAAG,CAACO,KAAK,CAAC,cAAc,EAAC;QACrBN,KAAK;QACLE;MACJ,CAAC,CAAC;IACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}