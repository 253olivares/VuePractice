{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.showAddTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Tasks, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","$props","showAddTask","_hoisted_1","_createVNode","_component_AddTask","onAddTask","$options","addTask","_createCommentVNode","_component_Tasks","onToggleReminder","toggleReminder","onDeleteTask","deleteTask","tasks","$data"],"sources":["C:\\xampp\\htdocs\\vuePractice\\taskList-vue_cli_Project\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n     <div v-if=\"showAddTask\">\r\n      <AddTask @add-task=\"addTask\"></AddTask>\r\n    </div>\r\n    <Tasks @toggleReminder=\"toggleReminder\" @deleteTask=\"deleteTask\"  :tasks=\"tasks\"></Tasks>\r\n</template>\r\n\r\n<script>\r\n    import Tasks from '../components/Tasks.vue'\r\n    import AddTask from '../components/AddTask.vue'\r\n\r\n    export default {\r\n        name:'Home',\r\n        props:{\r\n            showAddTask:Boolean,\r\n        },\r\n        components: {\r\n            Tasks,\r\n            AddTask\r\n        },\r\n        data() {\r\n            return {\r\n                tasks:[]\r\n            }\r\n        },\r\n        methods:{\r\n            async deleteTask(id){\r\n      if(confirm('Are you sure?')){\r\n\r\n        const res = await fetch(`api/tasks/${id}`,{\r\n          method: 'DELETE'\r\n        })\r\n\r\n        res.status === 200 ? (this.tasks = this.tasks.filter((task)=> task.id !==id )) : alert('Error deleting task');\r\n      }\r\n            },\r\n            async toggleReminder(id){\r\n\r\n      const taskToToggle = await this.fetchTask(id);\r\n\r\n      const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder}\r\n\r\n      const res = await fetch( `api/tasks/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        body:JSON.stringify(updateTask)\r\n      })\r\n\r\n      const data = await res.json();\r\n\r\n      this.tasks = this.tasks.map((task) => task.id == id ? {...task, reminder: data.reminder} : task);\r\n            },\r\n            async addTask(task){\r\n      const res = await fetch('api/tasks',{\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application.json',\r\n        },\r\n        body: JSON.stringify(task),\r\n      })\r\n\r\n      const data = await res.json();\r\n\r\n      this.tasks = [...this.tasks, data]\r\n            },\r\n            async fetchTasks(){\r\n      const res = await fetch('api/tasks');\r\n\r\n      const data = await res.json();\r\n\r\n      return data;\r\n            }, \r\n            async fetchTask(id){\r\n      const res = await fetch(`api/tasks/${id}`);\r\n\r\n      const data = await res.json();\r\n\r\n      return data;\r\n            }\r\n        },\r\n        async created() {\r\n            this.tasks = await this.fetchTasks();\r\n        },\r\n    }\r\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;;;;uBAAAC,mBAAA,CAAAC,SAAA,SACgBC,MAAA,CAAAC,WAAW,I,cAAtBH,mBAAA,CAEK,OAHVI,UAAA,GAEMC,YAAA,CAAuCC,kBAAA;IAA7BC,SAAQ,EAAEC,QAAA,CAAAC;EAAO,uC,KAFjCC,mBAAA,gBAIIL,YAAA,CAAyFM,gBAAA;IAAjFC,gBAAc,EAAEJ,QAAA,CAAAK,cAAc;IAAGC,YAAU,EAAEN,QAAA,CAAAO,UAAU;IAAIC,KAAK,EAAEC,KAAA,CAAAD"},"metadata":{},"sourceType":"module","externalDependencies":[]}