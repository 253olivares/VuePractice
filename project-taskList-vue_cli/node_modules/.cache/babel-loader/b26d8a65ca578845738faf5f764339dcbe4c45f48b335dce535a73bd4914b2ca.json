{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Button = _resolveComponent(\"Button\");\n  return _openBlock(), _createElementBlock(\"header\", null, [_createCommentVNode(\" header component displays title from props that was imported  \"), _createElementVNode(\"h1\", null, _toDisplayString($props.title), 1 /* TEXT */), _createCommentVNode(\" v-show to make sure button only displays when the route is set to / for home page but click event emit toggleAddTask to move function to parent component\\r\\n            showAdd Task is bind to text attribute and color attribute is bind to text and color with a ternary to change the value depending on if showAddTask is true or not \\r\\n        \"), _withDirectives(_createVNode(_component_Button, {\n    onBtnClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('toggleAddTask')),\n    text: $props.showAddTask ? 'Close' : 'Add Task',\n    color: $props.showAddTask ? 'red' : 'green'\n  }, null, 8 /* PROPS */, [\"text\", \"color\"]), [[_vShow, $options.homePage]])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createElementVNode","_toDisplayString","$props","title","_createVNode","_component_Button","onBtnClick","_cache","$event","_ctx","$emit","text","showAddTask","color","$options","homePage"],"sources":["C:\\xampp\\htdocs\\vuePractice\\project-taskList-vue_cli\\src\\components\\Header.vue"],"sourcesContent":["<template>\r\n    <header>\r\n        <!-- header component displays title from props that was imported  -->\r\n        <h1>{{title}}</h1>\r\n        <!-- v-show to make sure button only displays when the route is set to / for home page but click event emit toggleAddTask to move function to parent component\r\n            showAdd Task is bind to text attribute and color attribute is bind to text and color with a ternary to change the value depending on if showAddTask is true or not \r\n        -->\r\n        <Button v-show=\"homePage\" @btn-click=\"$emit('toggleAddTask')\" :text=\"showAddTask ? 'Close' : 'Add Task'\" :color=\"showAddTask ? 'red' : 'green'\"></Button>\r\n    </header>\r\n</template>\r\n\r\n<script>\r\n\r\n    // importing our button component that is being used to display our add task form\r\n    import Button from './Button.vue'\r\n\r\n\r\n    export default{\r\n        // typical naming convention\r\n        name: 'Header',\r\n        // Defining props being passed down from app\r\n        props: {\r\n            // additional type checks to make sure we are passing down a bool or string and provide a default if value is missing\r\n            title: {\r\n                type:String,\r\n                default: 'Hello World'\r\n            },\r\n            showAddTask: Boolean\r\n        },\r\n        // importing my button component\r\n        components: {\r\n            Button,\r\n        },\r\n        // computed function that is defined at the start with the page loads\r\n        computed: {\r\n            homePage(){\r\n                if(this.$route.path ==='/'){\r\n                    return true\r\n                } else{\r\n                    return false\r\n                }\r\n            }\r\n        },\r\n        // our emit that is being passed to our app to tell the app button is clicked new value is then passed back through\r\n        emits: ['toggleAddTask']\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\nheader{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":";;;uBACIA,mBAAA,CAOS,iBANLC,mBAAA,mEAAsE,EACtEC,mBAAA,CAAkB,YAAAC,gBAAA,CAAZC,MAAA,CAAAC,KAAK,kBACXJ,mBAAA,6VAEG,E,gBACHK,YAAA,CAAyJC,iBAAA;IAA9HC,UAAS,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;IAAoBC,IAAI,EAAET,MAAA,CAAAU,WAAW;IAA0BC,KAAK,EAAEX,MAAA,CAAAU,WAAW;wDAA5GE,QAAA,CAAAC,QAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}