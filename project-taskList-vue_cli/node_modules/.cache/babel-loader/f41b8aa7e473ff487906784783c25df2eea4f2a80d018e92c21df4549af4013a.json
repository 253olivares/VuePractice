{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4358c8c6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form-control\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Task\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-control\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Day & Time\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-control form-control-check\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Set Reminder\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  value: \"Save Task\",\n  class: \"btn btn-block\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" addTask component submit listens for the submit variable that triggers on submit function we have in methods \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = (...args) => $options.onSubmit && $options.onSubmit(...args)),\n    class: \"add-form\"\n  }, [_createCommentVNode(\" typical form with only adjustments is using v-model to bind our text input to data below\\r\\n        this makes it easy to keep track of these values and create a new object and submit to parent component when we click submit\\r\\n        \"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event),\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Add Task\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]])]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.day = $event),\n    type: \"text\",\n    name: \"day\",\n    placeholder: \"Add Day & Time\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.day]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.reminder = $event),\n    type: \"checkbox\",\n    name: \"reminder\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.reminder]])]), _hoisted_7], 32 /* NEED_HYDRATION */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","type","value","_createElementBlock","_Fragment","_createCommentVNode","onSubmit","_cache","args","$options","_hoisted_1","_hoisted_2","$event","$data","text","name","placeholder","_hoisted_3","_hoisted_4","day","_hoisted_5","_hoisted_6","reminder","_hoisted_7"],"sources":["C:\\xampp\\htdocs\\vuePractice\\project-taskList-vue_cli\\src\\components\\AddTask.vue"],"sourcesContent":["<template>\r\n\r\n    <!-- addTask component submit listens for the submit variable that triggers on submit function we have in methods -->\r\n    <form @submit=\"onSubmit\" class=\"add-form\">\r\n        <!-- typical form with only adjustments is using v-model to bind our text input to data below\r\n        this makes it easy to keep track of these values and create a new object and submit to parent component when we click submit\r\n        -->\r\n        <div class=\"form-control\">\r\n            <label>Task</label>\r\n            <input v-model=\"text\" type=\"text\" name=\"text\" placeholder=\"Add Task\" />\r\n        </div>\r\n        <div class=\"form-control\">\r\n            <label>Day & Time</label>\r\n            <input v-model=\"day\" type=\"text\"\r\n            name=\"day\"\r\n            placeholder=\"Add Day & Time\">\r\n        </div>\r\n        <div class=\"form-control form-control-check\">\r\n            <label>Set Reminder</label>\r\n            <input v-model=\"reminder\" type=\"checkbox\" name=\"reminder\" />\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Save Task\" class=\"btn btn-block\" />\r\n    </form>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        // typical export\r\n        name: 'AddTask',\r\n        // data sets text day and reminder and binds them to the form\r\n        data() {\r\n            return{\r\n                text:'',\r\n                day:'',\r\n                reminder:false\r\n            }\r\n        },\r\n        methods: {\r\n            // on submit when we trigger the event listener above we create a new task object and pass that objet to parent component by emmiting add task which holds the new object\r\n            onSubmit(e){\r\n                e.preventDefault();\r\n                if(!this.text){\r\n                    alert('Please add a task')\r\n                    return\r\n                }\r\n\r\n                const newTask = {\r\n                    // id: Math.floor(Math.random()*100000),\r\n                    text: this.text,\r\n                    day: this.day,\r\n                    reminder: this.reminder\r\n                }\r\n\r\n                this.$emit('add-task', newTask);\r\n\r\n                this.text='';\r\n                this.day='';\r\n                this.reminder= false;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.add-form{\r\n    margin-bottom:40px\r\n}\r\n\r\n.form-control {\r\n    margin: 20px 0;\r\n}\r\n\r\n.form-control label{\r\n    display: block;\r\n}\r\n.form-control input {\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px;\r\n    padding: 3px 7px;\r\n    font-size: 17px;\r\n}\r\n\r\n.form-control-check{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.form-control-check label {\r\n    flex: 1;\r\n}\r\n\r\n.form-control-check input {\r\n    flex: 2;\r\n    height: 20px;\r\n}\r\n\r\n</style>"],"mappings":";;;EAOaA,KAAK,EAAC;AAAc;gEACrBC,mBAAA,CAAmB,eAAZ,MAAI;;EAGVD,KAAK,EAAC;AAAc;gEACrBC,mBAAA,CAAyB,eAAlB,YAAU;;EAKhBD,KAAK,EAAC;AAAiC;gEACxCC,mBAAA,CAA2B,eAApB,cAAY;gEAIvBA,mBAAA,CAA+D;EAAxDC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC,WAAW;EAACH,KAAK,EAAC;;;uBAtBrDI,mBAAA,CAAAC,SAAA,SAEIC,mBAAA,kHAAqH,EACrHL,mBAAA,CAoBO;IApBAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAH,QAAA,IAAAG,QAAA,CAAAH,QAAA,IAAAE,IAAA,CAAQ;IAAET,KAAK,EAAC;MAC3BM,mBAAA,iPAEG,EACHL,mBAAA,CAGM,OAHNU,UAGM,GAFFC,UAAmB,E,gBACnBX,mBAAA,CAAuE;IATnF,uBAAAO,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAS4BC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEX,IAAI,EAAC,MAAM;IAACc,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;iDAA1CH,KAAA,CAAAC,IAAI,E,KAExBd,mBAAA,CAKM,OALNiB,UAKM,GAJFC,UAAyB,E,gBACzBlB,mBAAA,CAE6B;IAfzC,uBAAAO,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAa4BC,KAAA,CAAAM,GAAG,GAAAP,MAAA;IAAEX,IAAI,EAAC,MAAM;IAChCc,IAAI,EAAC,KAAK;IACVC,WAAW,EAAC;iDAFIH,KAAA,CAAAM,GAAG,E,KAIvBnB,mBAAA,CAGM,OAHNoB,UAGM,GAFFC,UAA2B,E,gBAC3BrB,mBAAA,CAA4D;IAnBxE,uBAAAO,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAmB4BC,KAAA,CAAAS,QAAQ,GAAAV,MAAA;IAAEX,IAAI,EAAC,UAAU;IAACc,IAAI,EAAC;qDAA/BF,KAAA,CAAAS,QAAQ,E,KAG5BC,UAA+D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}