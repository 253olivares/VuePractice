{"ast":null,"code":"import NavbarLink from './NavbarLink.vue';\nexport default {\n  components: {\n    NavbarLink\n  },\n  props: ['pages', 'activePage', 'navLinkClick'],\n  data() {\n    return {\n      theme: 'light'\n    };\n  },\n  methods: {\n    changeTheme() {\n      let theme = \"light\";\n      if (this.theme == 'light') {\n        theme = 'dark';\n      }\n      this.theme = theme;\n    },\n    storeThemeSetting() {\n      localStorage.setItem('theme', this.theme);\n    },\n    getstoreThemeSetting() {\n      localStorage.setItem('theme', this.theme);\n    }\n  }\n};","map":{"version":3,"names":["NavbarLink","components","props","data","theme","methods","changeTheme","storeThemeSetting","localStorage","setItem","getstoreThemeSetting"],"sources":["C:\\xampp\\htdocs\\vuePractice\\vue_cli_practice2\\src\\components\\Nav.vue"],"sourcesContent":["<template>\r\n<nav :class=\"[`navbar-${theme}`,`bg-${theme}`,'navbar','navbar-expand-lg']\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">My Vue</a>\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li v-for=\"(page,index) in pages\" class=\"nav-item\" :key=\"index\">\r\n                    <NavbarLink\r\n                        :page=\"page\"\r\n                        :isActive=\"activePage === index\"\r\n                        v-on:click.prevent=\"navLinkClick(index)\"\r\n                    ></NavbarLink>\r\n                </li>\r\n            </ul>\r\n            <form class=\"d-flex\">\r\n                <button\r\n                class=\"btn btn-primary\"\r\n                @click.prevent = \"changeTheme()\">\r\n                Toggle Nav Bar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script>\r\n\r\nimport NavbarLink from './NavbarLink.vue';\r\n    export default {\r\n        components: {\r\n        NavbarLink\r\n        },\r\n        props: ['pages','activePage', 'navLinkClick'],\r\n        data(){\r\n            return{\r\n                theme: 'light',\r\n            }\r\n        },\r\n        methods: {\r\n            changeTheme(){\r\n                let theme = \"light\";\r\n                if(this.theme == 'light'){  \r\n                    theme = 'dark';\r\n                }\r\n                this.theme = theme;\r\n            },\r\n            storeThemeSetting(){\r\n                localStorage.setItem('theme',this.theme)\r\n            },\r\n            getstoreThemeSetting(){\r\n                localStorage.setItem('theme',this.theme)\r\n            }\r\n        },\r\n    }\r\n</script>"],"mappings":"AA0BA,OAAOA,UAAS,MAAO,kBAAkB;AACrC,eAAe;EACXC,UAAU,EAAE;IACZD;EACA,CAAC;EACDE,KAAK,EAAE,CAAC,OAAO,EAAC,YAAY,EAAE,cAAc,CAAC;EAC7CC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAE;MACT,IAAIF,KAAI,GAAI,OAAO;MACnB,IAAG,IAAI,CAACA,KAAI,IAAK,OAAO,EAAC;QACrBA,KAAI,GAAI,MAAM;MAClB;MACA,IAAI,CAACA,KAAI,GAAIA,KAAK;IACtB,CAAC;IACDG,iBAAiBA,CAAA,EAAE;MACfC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC,IAAI,CAACL,KAAK;IAC3C,CAAC;IACDM,oBAAoBA,CAAA,EAAE;MAClBF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC,IAAI,CAACL,KAAK;IAC3C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}