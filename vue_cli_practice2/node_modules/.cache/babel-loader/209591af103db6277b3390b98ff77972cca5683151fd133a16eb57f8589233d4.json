{"ast":null,"code":"import { userRouter } from 'vue-router';\nimport { ref, inject } from 'vue';\nconst __default__ = {\n  computed: {\n    isFormInvalid() {\n      return !this.pageTitle || !this.pageContent || !this.linkText || !this.linkURL;\n    }\n  },\n  methods: {\n    submitForm() {\n      if (!this.pageTitle || !this.pageContent || !this.linkText || !this.linkURL) {\n        alert('Please fill the form.');\n        return;\n      }\n      this.$emit('pageCreated', {\n        pageTitle: this.pageTitle,\n        pageContent: this.pageContent,\n        link: {\n          text: this.linkText,\n          url: this.linkURL\n        },\n        published: this.published\n      });\n      this.pageTitle = '';\n      this.pageContent = '';\n      this.linkText = '';\n      this.linkURL = '';\n      this.published = true;\n    }\n  },\n  watch: {\n    pageTitle(newTitle, oldTitle) {\n      if (this.linkText === oldTitle) {\n        this.linkText = newTitle;\n      }\n    }\n  }\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'CreatePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let pageTitle = ref('');\n    let pageContent = ref('');\n    let linkText = ref('');\n    let published = ref(true);\n    function submitForm() {\n      if (!pageTitle || !pageContent || !linkText) {\n        alert('Please fill the form.');\n        return;\n      }\n      let newPage = {\n        pageTitle,\n        pageContent,\n        link: {\n          text: linkText\n        },\n        published\n      };\n      pages.addPage();\n      bus.$emit('pageCreated', {\n        pageTitle,\n        pageContent,\n        link: {\n          text: linkText\n        },\n        published\n      });\n      pageTitle = '';\n      pageContent = '';\n      linkText = '';\n      published = true;\n    }\n    const __returned__ = {\n      get pageTitle() {\n        return pageTitle;\n      },\n      set pageTitle(v) {\n        pageTitle = v;\n      },\n      get pageContent() {\n        return pageContent;\n      },\n      set pageContent(v) {\n        pageContent = v;\n      },\n      get linkText() {\n        return linkText;\n      },\n      set linkText(v) {\n        linkText = v;\n      },\n      get published() {\n        return published;\n      },\n      set published(v) {\n        published = v;\n      },\n      submitForm,\n      get userRouter() {\n        return userRouter;\n      },\n      ref,\n      inject\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["userRouter","ref","inject","__default__","computed","isFormInvalid","pageTitle","pageContent","linkText","linkURL","methods","submitForm","alert","$emit","link","text","url","published","watch","newTitle","oldTitle","newPage","pages","addPage","bus"],"sources":["C:/xampp/htdocs/vuePractice/vue_cli_practice2/src/views/CreatePage.vue"],"sourcesContent":["<template>\r\n    <form action=\"\" class=\"container mb-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">\r\n                        Page Title\r\n                    </label>\r\n                    <input\r\n                    v-model=\"pageTitle\"\r\n                    type=\"text\" \r\n                    class=\"form-control\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">\r\n                        Content\r\n                    </label>\r\n                    <textarea type=\"text\" class=\"form-control\" rows=\"5\" v-model=\"pageContent\"></textarea>\r\n                </div>\r\n            </div>\r\n            <div class=\"col\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"\" class=\"form-label\">\r\n                        Link Text\r\n                    </label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"linkText\">\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"form-check\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" v-model=\"published\">\r\n                        <label for=\"gridCheck1\" class=\"form-check-label\">\r\n                            Published\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                :disbled=\"isFormInvalid\"\r\n                @click.prevent=\"submitForm\"\r\n                >Create Page</button>\r\n        </div>\r\n        </form>\r\n</template>\r\n\r\n<script setup>\r\nimport {userRouter} from 'vue-router';\r\nimport {ref,inject} from 'vue';\r\n\r\nlet pageTitle = ref('');\r\nlet pageContent = ref('');\r\nlet linkText = ref('');\r\nlet published = ref(true);\r\n\r\nfunction submitForm(){\r\n        if (!pageTitle || !pageContent ||!linkText ){\r\n            alert('Please fill the form.')\r\n            return;\r\n        }\r\n\r\n        let newPage={\r\n            pageTitle,\r\n            pageContent,\r\n            link: {\r\n                text: linkText,\r\n                },\r\n            published\r\n        }\r\n\r\n        pages.addPage()\r\n\r\n        bus.$emit('pageCreated',{\r\n            pageTitle,\r\n            pageContent,\r\n            link: {\r\n                text: linkText,\r\n                },\r\n            published\r\n        });\r\n\r\n        pageTitle='';\r\n        pageContent='';\r\n        linkText='';\r\n        published = true;\r\n    }\r\n\r\n</script>\r\n\r\n<script>\r\n    export default {\r\n        computed: {\r\n            isFormInvalid(){\r\n                return!this.pageTitle || !this.pageContent ||!this.linkText || !this.linkURL \r\n            }\r\n        },\r\n        methods: {\r\n            submitForm(){\r\n                if (!this.pageTitle || !this.pageContent ||!this.linkText || !this.linkURL){\r\n                    alert('Please fill the form.')\r\n                    return;\r\n                }\r\n\r\n                this.$emit('pageCreated',{\r\n                    pageTitle: this.pageTitle,\r\n                    pageContent: this.pageContent,\r\n                    link: {\r\n                        text: this.linkText,\r\n                        url: this.linkURL,\r\n                    },\r\n                    published: this.published\r\n                });\r\n                this.pageTitle='';\r\n                this.pageContent='';\r\n                this.linkText='';\r\n                this.linkURL='';\r\n                this.published = true;\r\n            }\r\n        },\r\n        watch: {\r\n            pageTitle(newTitle, oldTitle){\r\n                if(this.linkText === oldTitle){\r\n                    this.linkText = newTitle;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":"AAiDA,SAAQA,UAAU,QAAO,YAAY;AACrC,SAAQC,GAAG,EAACC,MAAM,QAAO,KAAK;AA0C1B,MAAAC,WAAA,GAAe;EACXC,QAAQ,EAAE;IACNC,aAAaA,CAAA,EAAE;MACX,OAAM,CAAC,IAAI,CAACC,SAAS,IAAI,CAAC,IAAI,CAACC,WAAW,IAAG,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACC,OAAO;IAChF;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAE;MACR,IAAI,CAAC,IAAI,CAACL,SAAS,IAAI,CAAC,IAAI,CAACC,WAAW,IAAG,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACC,OAAO,EAAC;QACvEG,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACJ;MAEA,IAAI,CAACC,KAAK,CAAC,aAAa,EAAC;QACrBP,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BO,IAAI,EAAE;UACFC,IAAI,EAAE,IAAI,CAACP,QAAQ;UACnBQ,GAAG,EAAE,IAAI,CAACP;QACd,CAAC;QACDQ,SAAS,EAAE,IAAI,CAACA;MACpB,CAAC,CAAC;MACF,IAAI,CAACX,SAAS,GAAC,EAAE;MACjB,IAAI,CAACC,WAAW,GAAC,EAAE;MACnB,IAAI,CAACC,QAAQ,GAAC,EAAE;MAChB,IAAI,CAACC,OAAO,GAAC,EAAE;MACf,IAAI,CAACQ,SAAS,GAAG,IAAI;IACzB;EACJ,CAAC;EACDC,KAAK,EAAE;IACHZ,SAASA,CAACa,QAAQ,EAAEC,QAAQ,EAAC;MACzB,IAAG,IAAI,CAACZ,QAAQ,KAAKY,QAAQ,EAAC;QAC1B,IAAI,CAACZ,QAAQ,GAAGW,QAAQ;MAC5B;IACJ;EACJ;AACJ,CAAC;;;;;;;IA5EL,IAAIb,SAAS,GAAGL,GAAG,CAAC,EAAE,CAAC;IACvB,IAAIM,WAAW,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,IAAIO,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;IACtB,IAAIgB,SAAS,GAAGhB,GAAG,CAAC,IAAI,CAAC;IAEzB,SAASU,UAAUA,CAAA,EAAE;MACb,IAAI,CAACL,SAAS,IAAI,CAACC,WAAW,IAAG,CAACC,QAAQ,EAAE;QACxCI,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACJ;MAEA,IAAIS,OAAO,GAAC;QACRf,SAAS;QACTC,WAAW;QACXO,IAAI,EAAE;UACFC,IAAI,EAAEP;QACN,CAAC;QACLS;MACJ,CAAC;MAEDK,KAAK,CAACC,OAAO,CAAC,CAAC;MAEfC,GAAG,CAACX,KAAK,CAAC,aAAa,EAAC;QACpBP,SAAS;QACTC,WAAW;QACXO,IAAI,EAAE;UACFC,IAAI,EAAEP;QACN,CAAC;QACLS;MACJ,CAAC,CAAC;MAEFX,SAAS,GAAC,EAAE;MACZC,WAAW,GAAC,EAAE;MACdC,QAAQ,GAAC,EAAE;MACXS,SAAS,GAAG,IAAI;IACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}