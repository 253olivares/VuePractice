{"ast":null,"code":"import { ref, reactive, inject } from 'vue';\n\n//const counter = ref(0); // {value:0}\n\nexport default {\n  __name: 'PageList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    //composite API more functional approach vs using an object approach\n    const data = reactive({\n      counter: 0\n    });\n    const $pages = inject('$pages');\n    let click = () => {\n      data.counter++;\n    };\n\n    // export default {\n    //     data() {\n    //         return{\n    //             counter: 0,\n    //         }\n    //     },\n    //     methods: {\n    //         click() {\n    //             this.counter ++;\n    //         }\n    //     }\n    // }\n\n    const __returned__ = {\n      data,\n      $pages,\n      get click() {\n        return click;\n      },\n      set click(v) {\n        click = v;\n      },\n      ref,\n      reactive,\n      inject\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","inject","data","counter","$pages","click"],"sources":["C:/xampp/htdocs/vuePractice/vue_cli_practice2/src/views/PageList.vue"],"sourcesContent":["<template>\r\n    <h4>Pages</h4>\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th>Title</th>\r\n                <th>Link Text</th>\r\n                <th>Is Published</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr\r\n                v-for=\"(page,index) in $pages.getAllPages()\"\r\n                :key=\"index\"\r\n            >\r\n                <td>{{ page.pageTitle }}</td>\r\n                <td>{{ page.pageContent }}</td>\r\n                <td>{{ page.published }}</td>\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>\r\n\r\n<script setup>\r\n//composite API more functional approach vs using an object approach\r\nimport {ref, reactive,inject} from 'vue';\r\n\r\n//const counter = ref(0); // {value:0}\r\n\r\nconst data = reactive({counter: 0});\r\nconst $pages = inject('$pages');\r\n\r\nlet click = ()=>{\r\n    data.counter++\r\n}\r\n\r\n\r\n// export default {\r\n//     data() {\r\n//         return{\r\n//             counter: 0,\r\n//         }\r\n//     },\r\n//     methods: {\r\n//         click() {\r\n//             this.counter ++;\r\n//         }\r\n//     }\r\n// }\r\n</script>"],"mappings":"AA0BA,SAAQA,GAAG,EAAEC,QAAQ,EAACC,MAAM,QAAO,KAAK;;AAExC;;;;;;;;;IAHA;IAKA,MAAMC,IAAI,GAAGF,QAAQ,CAAC;MAACG,OAAO,EAAE;IAAC,CAAC,CAAC;IACnC,MAAMC,MAAM,GAAGH,MAAM,CAAC,QAAQ,CAAC;IAE/B,IAAII,KAAK,GAAGA,CAAA,KAAI;MACZH,IAAI,CAACC,OAAO,EAAE;IAClB,CAAC;;IAGD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}